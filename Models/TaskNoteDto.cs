// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Optimus.LibOrquestrator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TaskNoteDto
    {
        /// <summary>
        /// Initializes a new instance of the TaskNoteDto class.
        /// </summary>
        public TaskNoteDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskNoteDto class.
        /// </summary>
        /// <param name="key">Key</param>
        /// <param name="tenantId">Gets or Sets the Tenant Id.</param>
        /// <param name="organizationUnitId">Gets or sets the
        /// folder/organization-unit id.</param>
        /// <param name="taskId">Gets or sets the Id of Task to which this Note
        /// belongs to.</param>
        /// <param name="text">Gets or sets the text note for the task.</param>
        /// <param name="creatorUserId">Gets or sets the id of the user who
        /// created the Task Note.</param>
        /// <param name="creationTime">Gets or sets time at which this task was
        /// created.</param>
        public TaskNoteDto(UserLoginInfoDto creatorUser = default(UserLoginInfoDto), UserLoginInfoDto lastModifiedUser = default(UserLoginInfoDto), System.Guid? key = default(System.Guid?), int? tenantId = default(int?), long? organizationUnitId = default(long?), long? taskId = default(long?), string text = default(string), long? creatorUserId = default(long?), System.DateTime? creationTime = default(System.DateTime?), long? id = default(long?))
        {
            CreatorUser = creatorUser;
            LastModifiedUser = lastModifiedUser;
            Key = key;
            TenantId = tenantId;
            OrganizationUnitId = organizationUnitId;
            TaskId = taskId;
            Text = text;
            CreatorUserId = creatorUserId;
            CreationTime = creationTime;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatorUser")]
        public UserLoginInfoDto CreatorUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastModifiedUser")]
        public UserLoginInfoDto LastModifiedUser { get; set; }

        /// <summary>
        /// Gets or sets key
        /// </summary>
        [JsonProperty(PropertyName = "Key")]
        public System.Guid? Key { get; set; }

        /// <summary>
        /// Gets or Sets the Tenant Id.
        /// </summary>
        [JsonProperty(PropertyName = "TenantId")]
        public int? TenantId { get; set; }

        /// <summary>
        /// Gets or sets the folder/organization-unit id.
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationUnitId")]
        public long? OrganizationUnitId { get; set; }

        /// <summary>
        /// Gets or sets the Id of Task to which this Note belongs to.
        /// </summary>
        [JsonProperty(PropertyName = "TaskId")]
        public long? TaskId { get; set; }

        /// <summary>
        /// Gets or sets the text note for the task.
        /// </summary>
        [JsonProperty(PropertyName = "Text")]
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets the id of the user who created the Task Note.
        /// </summary>
        [JsonProperty(PropertyName = "CreatorUserId")]
        public long? CreatorUserId { get; set; }

        /// <summary>
        /// Gets or sets time at which this task was created.
        /// </summary>
        [JsonProperty(PropertyName = "CreationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public long? Id { get; set; }

    }
}
